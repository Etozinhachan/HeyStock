// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using heystock.data;

#nullable disable

namespace HeyStock.Migrations
{
    [DbContext(typeof(DbDataContext))]
    [Migration("20240226212028_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("heystock.models.Distribuidor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("numero_telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("MarcaId");

                    b.ToTable("distribuidores");
                });

            modelBuilder.Entity("heystock.models.Fornecedor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("marcaId")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("marcaId");

                    b.ToTable("fornecedores");
                });

            modelBuilder.Entity("heystock.models.Marca", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("distribuidorId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("fornecedorId")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("numero_telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("marcas");
                });

            modelBuilder.Entity("heystock.models.Produto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("distribuidorId")
                        .HasColumnType("int");

                    b.Property<int>("marcaId")
                        .HasColumnType("int");

                    b.Property<float>("preco")
                        .HasColumnType("float");

                    b.Property<int>("stockId")
                        .HasColumnType("int");

                    b.Property<string>("validade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("distribuidorId");

                    b.HasIndex("marcaId");

                    b.HasIndex("stockId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("heystock.models.Stock", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("IVA")
                        .HasColumnType("float");

                    b.Property<int>("fornecedorId")
                        .HasColumnType("int");

                    b.Property<float>("precoDeCompra")
                        .HasColumnType("float");

                    b.Property<float>("precoDeVenda")
                        .HasColumnType("float");

                    b.Property<int>("vendaId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("fornecedorId");

                    b.HasIndex("vendaId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("heystock.models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("passHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("salt")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("heystock.models.Venda", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("custo")
                        .HasColumnType("float");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("heystock.models.Distribuidor", b =>
                {
                    b.HasOne("heystock.models.Marca", "marca")
                        .WithMany("distribuidores")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("marca");
                });

            modelBuilder.Entity("heystock.models.Fornecedor", b =>
                {
                    b.HasOne("heystock.models.Marca", "marca")
                        .WithMany("fornecedores")
                        .HasForeignKey("marcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("marca");
                });

            modelBuilder.Entity("heystock.models.Produto", b =>
                {
                    b.HasOne("heystock.models.Distribuidor", "distribuidor")
                        .WithMany("produtos")
                        .HasForeignKey("distribuidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("heystock.models.Marca", "marca")
                        .WithMany("produtos")
                        .HasForeignKey("marcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("heystock.models.Stock", "stock")
                        .WithMany("produtos")
                        .HasForeignKey("stockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("distribuidor");

                    b.Navigation("marca");

                    b.Navigation("stock");
                });

            modelBuilder.Entity("heystock.models.Stock", b =>
                {
                    b.HasOne("heystock.models.Fornecedor", "fornecedor")
                        .WithMany("stocks")
                        .HasForeignKey("fornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("heystock.models.Venda", "venda")
                        .WithMany("stocks")
                        .HasForeignKey("vendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fornecedor");

                    b.Navigation("venda");
                });

            modelBuilder.Entity("heystock.models.Venda", b =>
                {
                    b.HasOne("heystock.models.User", "user")
                        .WithMany("vendas")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("heystock.models.Distribuidor", b =>
                {
                    b.Navigation("produtos");
                });

            modelBuilder.Entity("heystock.models.Fornecedor", b =>
                {
                    b.Navigation("stocks");
                });

            modelBuilder.Entity("heystock.models.Marca", b =>
                {
                    b.Navigation("distribuidores");

                    b.Navigation("fornecedores");

                    b.Navigation("produtos");
                });

            modelBuilder.Entity("heystock.models.Stock", b =>
                {
                    b.Navigation("produtos");
                });

            modelBuilder.Entity("heystock.models.User", b =>
                {
                    b.Navigation("vendas");
                });

            modelBuilder.Entity("heystock.models.Venda", b =>
                {
                    b.Navigation("stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
